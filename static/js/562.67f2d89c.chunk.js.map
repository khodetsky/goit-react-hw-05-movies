{"version":3,"file":"static/js/562.67f2d89c.chunk.js","mappings":"2MAsDA,UA9CuB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,YACFC,EAAAA,EAAAA,GAAUC,EAAAA,EAAAA,QAA0B,GAAIR,GAAUS,MAAK,SAAAC,GAASX,EAAaW,EAAM,GAC1F,GAAE,CAACV,IASJ,OACI,iCACI,6BACI,SAAC,KAAD,CAAMW,GAAIT,EAAV,uBAEHJ,IACG,iCACI,gBAAKc,IAAG,UA3BP,+BA2BO,OA1BN,QA0BM,OAAoCd,EAAUe,aAAeC,IAAKhB,EAAUiB,SACpF,wCAfY,WACxB,GAAIjB,EAAW,CACX,IAAMkB,EAAkC,GAAzBlB,EAAUmB,aACzB,OAAOC,KAAKC,MAAMH,EACrB,CACJ,CAU+BI,GAAhB,QACA,qCACA,uBAAItB,EAAUuB,YACd,mCACA,yBAAMvB,EAAUwB,OAAOC,KAAI,SAAAC,GAAK,OAAK,uBAAmBA,EAAMC,MAAjBD,EAAME,GAAnB,OAChC,2BACI,yBACI,SAAC,KAAD,CAAMf,GAAG,OAAT,qBAEJ,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGN,SAAC,KAAD,SAMnB,C","sources":["components/ProductDetails/ProductDetails.jsx"],"sourcesContent":["import { useParams, Outlet, Link, useLocation } from \"react-router-dom\";\nimport { GET_MOVIES_RULES } from '../Api';\nimport { getMovies } from '../Api';\nimport { useEffect, useState} from 'react';\n\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/';\nconst IMG_FILE_SIZE = 'w200';\n\nconst ProductDetails = () => {\n    const [movieInfo, setMovieInfo] = useState(null);\n    const { moviesId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(() => {\n            getMovies(GET_MOVIES_RULES.details, '', moviesId).then(res => { setMovieInfo(res) })\n    }, [moviesId]);\n\n    const ratingToPercentages = () => {\n        if (movieInfo) {\n            const rating = movieInfo.vote_average * 10;\n            return Math.round(rating);\n        }\n    }\n    \n    return (\n        <>\n            <button>\n                <Link to={backLinkHref}>Go back</Link>\n            </button>\n            {movieInfo && (\n                <>\n                    <img src={`${IMG_BASE_URL}${IMG_FILE_SIZE}${movieInfo.poster_path}`} alt={movieInfo.title} />\n                    <p>User score: {ratingToPercentages()}%</p>\n                    <p>Overview</p>\n                    <p>{movieInfo.overview}</p>\n                    <p>Genres</p>\n                    <div>{movieInfo.genres.map(genre => (<p key={genre.id}>{genre.name}</p>))}</div>\n                    <ul>\n                        <li>\n                            <Link to=\"cast\" >Cast</Link>\n                        </li>\n                        <li>\n                          <Link to=\"reviews\">Reviews</Link>\n                        </li>\n                    </ul>\n                    <Outlet/>\n                </>\n            )}\n        </>\n    )\n\n}\n\nexport default ProductDetails;"],"names":["useState","movieInfo","setMovieInfo","moviesId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovies","GET_MOVIES_RULES","then","res","to","src","poster_path","alt","title","rating","vote_average","Math","round","ratingToPercentages","overview","genres","map","genre","name","id"],"sourceRoot":""}